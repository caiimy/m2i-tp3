name: CI Pipeline
 
on: push
 
jobs:
 
  clone-repo:
    runs-on: ubuntu-latest
 
    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: vanessakovalsky/python-api-handle-it
        path: ./python-api-handle-it

    # - name: Access cloned repository content
    #   working-directory: python-api-handle-it
    #   run: |
    #     ls
    #     echo "----------------------"
    #     ls ..

    - name: Save repo 
      uses: actions/upload-artifact@v2
      with:
        name: upload artifact repo
        path: ./python-api-handle-it

  lint:
 
    needs: clone-repo
 
    runs-on: ubuntu-latest
 
    steps:
    - name: download artifact
      uses: actions/download-artifact@v2
      with:
        name: upload artifact repo
        path: ./python-api-handle-it

    - name: Install dependencies
      working-directory: python-api-handle-it
      run: |
        cd app
        pip install -r requirements.txt
        pip install pylint
 
    - name: Lint code
      working-directory: python-api-handle-it
      run: | 
        mkdir report
        pylint **/*.py --fail-under=5 --output-format=text > report/pylint-report.txt
 
    - name: Save lint report
      uses: actions/upload-artifact@v2
      with:
        name: pylint-report
        path: ./python-api-handle-it
 
  cyclomatic:
 
    needs: lint
 
    runs-on: ubuntu-latest
 
    steps:
 
    - name: download artifact
      uses: actions/download-artifact@v2
      with:
        name: pylint-report
        path: ./python-api-handle-it
 
    - name: Install dependencies
      working-directory: python-api-handle-it
      run: |
        pip install radon
 
    - name: Check complexity
      working-directory: python-api-handle-it
      run: |
        radon cc -s -a -nb --total-average --output-file=./report/complexity-report.txt .
 
    - name: Upload Complexity Report
      uses: actions/upload-artifact@v3
      with:
        name: complexity-report
        path: ./python-api-handle-it
 
  test:
 
    needs: cyclomatic
 
    runs-on: ubuntu-latest
 
    steps:
 
    - name: download artifact
      uses: actions/download-artifact@v2
      with:
        name: complexity-report
        path: ./python-api-handle-it
 
    - name: Install dependencies
      working-directory: python-api-handle-it
      run: |
        cd app
        pip install -r requirements.txt
        pip install html-testRunner
 
    - name: Run tests
      working-directory: python-api-handle-it
      run: |
        cd app
        python -m unittest test/unit/test.py 
 
    - name: Upload Test Report
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: ./python-api-handle-it
 
  build:
 
    needs: [test, cyclomatic, lint]
 
    runs-on: ubuntu-latest
 
    steps:
 
    - name: download artifact
      uses: actions/download-artifact@v2
      with:
        name: test-report
        path: ./python-api-handle-it
 
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build image
      working-directory: python-api-handle-it
      run: |
        docker build . --file docker-app/python/Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/myimage:1.0.0
 
    - name: Push image
      run: | 
        docker push ${{ secrets.DOCKER_USERNAME }}/myimage:1.0.0