name: CI Pipeline
 
on: push
 
jobs:
 
  clone-repo:
    runs-on: ubuntu-latest
 
    steps:
    - uses: actions/checkout@v3
      run: git clone https://github.com/vanessakovalsky/python-api-handle-it.git

    - name: Save repo
      uses: actions/upload-artifact@v1
      with:
        name: repo cloned
        path: ./python-api-handle-it
        
  lint:
 
    needs: clone-repo
 
    runs-on: ubuntu-latest
 
    steps:
 
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        pip install -r ./app/requirements.txt
        pip install pylint
        ls
 
    - name: Lint code
      run: pylint **/*.py --fail-under=5 --output-format=text --output-file=
 
    - name: Save lint report
      uses: actions/upload-artifact@v1
      with:
        name: pylint-report
        path: pylint-report.txt
  # lint:
  #   needs: clone-repo
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Install dependencies
  #     run: |
  #       pip install flake8
 
  #   - name: Linter code
  #     run: flake8 .
 
  #   - name: Save lint report
  #     uses: actions/upload-artifact@v1
  #     with:
  #       name: flake8-report
  #       path: flake8-report.txt
 
  cyclomatic:
 
    needs: lint
 
    runs-on: ubuntu-latest
 
    steps:
 
    - uses: actions/checkout@v3
 
    - name: Install dependencies
      run: |
        pip install radon
 
    - name: Check complexity
      run: |
        radon cc -s -a -nb --total-average --output-file=complexity-report.txt .
 
    - name: Upload Complexity Report
      uses: actions/upload-artifact@v3
      with:
        name: complexity-report
        path: complexity-report.txt
 
  test:
 
    needs: cyclomatic
 
    runs-on: ubuntu-latest
 
    steps:
 
    - uses: actions/checkout@v3
 
    - name: Install dependencies
      run: |
        cd app
        pip install -r requirements.txt
 
    - name: Run tests
      run: |
        python -m unittest test/unit/test.py
 
    - name: Upload Test Report
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: test/unit/test-report.xml
 
  build:
 
    needs: [test, cyclomatic, lint]
 
    runs-on: ubuntu-latest
 
    steps:
 
    - uses: actions/checkout@v3
 
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
 
    - name: Build image
      run: |
        docker build . --file Dockerfile --tag myimage:1.0.0
 
    - name: Push image
      run: | 
        docker push myimage:1.0.0