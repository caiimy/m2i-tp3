name: CI Pipeline

on: push
jobs:
    
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v4
      with:
        github-server-url: 'https://github.com/vanessakovalsky/python-api-handle-it.git'
        ref: master # Nom de la branche
        path: caiimy/python-api-handle-it

    - uses: actions/checkout@v4
    - name: Install dependencies
      run: pip install flake8
 
    - name: Lint code
      run: flake8 . --format=text --output-file=flake8-report.txt
 
    - name: Save lint report
      uses: actions/upload-artifact@v1
      with:
        name: flake8-report
        path: flake8-report.txt

  # duplicate:
 
  #   needs: lint
  #   runs-on: ubuntu-latest
 
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Install dependencies
  #     run: pip install clonedigger
 
  #   - name: Check duplicates
  #     run: clonedigger --output-file=duplicate-report.txt
 
  #   - name: Save duplicate report
  #     uses: actions/upload-artifact@v1
  #     with:
  #       name: duplicate-report
  #       path: duplicate-report.txt 
 
  cyclomatic:
 
    #needs: [lint, duplicate]
    needs: lint

    runs-on: ubuntu-latest
 
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: pip install radon
 
    - name: Check complexity
      run: radon cc -s -a -nb --total-average --output-file=complexity-report.txt .
 
    - name: Save complexity report
      uses: actions/upload-artifact@v1
      with: 
        name: complexity-report
        path: complexity-report.txt
 
  test:
 
    needs: cyclomatic
 
    runs-on: ubuntu-latest
 
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: pip install -r app/requirements.txt
 
    - name: Run tests
      run: python -m unittest discover -p "*.py" > test-report.xml
 
    - name: Save test report
      uses: actions/upload-artifact@v1
      with:
        name: test-report
        path: test-report.xml
 
  build:
 
    needs: test
 
    runs-on: ubuntu-latest
 
    steps:
 
    - uses: actions/checkout@v4
 
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
 
    - name: Build image
      run: docker build . --file Dockerfile --tag myimage:$(date +%s)
 
    - name: Push image
      run: docker push myimage:$(date +%s)